{"ast":null,"code":"var _jsxFileName = \"E:\\\\Intern2Grow\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { marked } from 'marked';\nimport useLocalStorage from './hooks/useLocalStorage.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useLocalStorage('markdown', '## Hello');\n  const [compiled, setCompiled] = useState(marked.parse(code));\n  const [view, setView] = useState('markdown'); // 'markdown', 'preview', 'docs'\n\n  const openMD = () => {\n    setView('markdown');\n  };\n\n  const openPreview = () => {\n    setView('preview');\n  };\n\n  const openDocs = () => {\n    setView('docs');\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openDocs,\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), view === 'markdown' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), view === 'preview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        dangerouslySetInnerHTML: {\n          __html: compiled\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), view === 'docs' && /*#__PURE__*/_jsxDEV(Docs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"+6zoaVgdsrHbyhRU1ssZNSqG36o=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\n\nconst Docs = () => {\n  _s2();\n\n  const [docs, setDocs] = useState('');\n  useEffect(() => {\n    fetch('https://api.example.com/docs') // Replace with the correct API endpoint\n    .then(response => response.json()).then(data => setDocs(data.content)).catch(error => console.error('Error fetching docs:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"docs\",\n    dangerouslySetInnerHTML: {\n      __html: marked.parse(docs)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Docs, \"35Eag+qSAymMM8e6FEMsqKDZM9M=\");\n\n_c2 = Docs;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Docs\");","map":{"version":3,"sources":["E:/Intern2Grow/markdown-previewer/src/App.js"],"names":["React","useState","useEffect","marked","useLocalStorage","App","code","setCode","compiled","setCompiled","parse","view","setView","openMD","openPreview","openDocs","handleChange","e","target","value","__html","Docs","docs","setDocs","fetch","then","response","json","data","content","catch","error","console"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { marked } from 'marked';\r\nimport useLocalStorage from './hooks/useLocalStorage.js';\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useLocalStorage('markdown', '## Hello');\r\n  const [compiled, setCompiled] = useState(marked.parse(code));\r\n  const [view, setView] = useState('markdown'); // 'markdown', 'preview', 'docs'\r\n\r\n  const openMD = () => {\r\n    setView('markdown');\r\n  };\r\n\r\n  const openPreview = () => {\r\n    setView('preview');\r\n  };\r\n\r\n  const openDocs = () => {\r\n    setView('docs');\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value);\r\n    setCompiled(marked.parse(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">MarkDown</button>\r\n          <button onClick={openPreview}>Preview</button>\r\n          <button onClick={openDocs}>Docs</button>\r\n        </div>\r\n        {view === 'markdown' && (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        )}\r\n        {view === 'preview' && (\r\n          <div className=\"preview\" dangerouslySetInnerHTML={{ __html: compiled }} />\r\n        )}\r\n        {view === 'docs' && <Docs />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Docs = () => {\r\n  const [docs, setDocs] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.example.com/docs') // Replace with the correct API endpoint\r\n      .then((response) => response.json())\r\n      .then((data) => setDocs(data.content))\r\n      .catch((error) => console.error('Error fetching docs:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"docs\" dangerouslySetInnerHTML={{ __html: marked.parse(docs) }} />\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}