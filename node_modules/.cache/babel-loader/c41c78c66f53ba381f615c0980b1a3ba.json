{"ast":null,"code":"var _jsxFileName = \"E:\\\\Intern2Grow\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// src/App.js\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { marked } from 'marked';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [code, setCode] = useLocalStorage('markdown', '## Hello');\n  const [compiled, setCompiled] = useState(marked.parse(code));\n  const [hide, hidePreview] = useState(true);\n\n  const openMD = () => {\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    hidePreview(false);\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n  };\n\n  const openDocs = () => {\n    hidePreview('docs');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openDocs,\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), hide === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : hide === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: compiled\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Docs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"sYkd3WecCcmOqQUU560BW1Bnye8=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\n\nconst Docs = () => {\n  _s2();\n\n  const [docs, setDocs] = useState('');\n  useEffect(() => {\n    fetch('https://api.example.com/docs').then(response => response.json()).then(data => setDocs(data.content));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: marked.parse(docs)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Docs, \"35Eag+qSAymMM8e6FEMsqKDZM9M=\");\n\n_c2 = Docs;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Docs\");","map":{"version":3,"sources":["E:/Intern2Grow/markdown-previewer/src/App.js"],"names":["React","useState","useEffect","marked","useLocalStorage","App","code","setCode","compiled","setCompiled","parse","hide","hidePreview","openMD","openPreview","handleChange","e","target","value","openDocs","__html","Docs","docs","setDocs","fetch","then","response","json","data","content"],"mappings":"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","sourcesContent":["// src/App.js\r\nimport './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { marked } from 'marked';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useLocalStorage('markdown', '## Hello');\r\n  const [compiled, setCompiled] = useState(marked.parse(code));\r\n  const [hide, hidePreview] = useState(true);\r\n\r\n  const openMD = () => {\r\n    hidePreview(true);\r\n  };\r\n\r\n  const openPreview = () => {\r\n    hidePreview(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value);\r\n    setCompiled(marked.parse(e.target.value));\r\n  };\r\n\r\n  const openDocs = () => {\r\n    hidePreview('docs');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">MarkDown</button>\r\n          <button onClick={openPreview}>Preview</button>\r\n          <button onClick={openDocs}>Docs</button>\r\n        </div>\r\n        {\r\n          hide === true ? \r\n            <div>\r\n              <textarea onChange={handleChange} value={code}/>\r\n            </div> : \r\n          hide === false ?\r\n            <div dangerouslySetInnerHTML={{__html: compiled}}></div> :\r\n            <Docs />\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Docs = () => {\r\n  const [docs, setDocs] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.example.com/docs')\r\n      .then(response => response.json())\r\n      .then(data => setDocs(data.content));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: marked.parse(docs) }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}