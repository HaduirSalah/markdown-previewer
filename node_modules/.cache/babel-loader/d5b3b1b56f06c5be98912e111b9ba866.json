{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorage, \"4530U20k0fLxofKxnp/jjzeib9g=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["E:/Intern2Grow/markdown-previewer/src/hooks/useLocalStorage.js"],"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","setValue","value","valueToStore","Function","setItem","stringify"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AAC7C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACF,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb;AACA,aAAOI,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBH,YAAjC;AACD,KAHD,CAGE,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAOT,YAAP;AACD;AACF,GAR6C,CAA9C;;AAUA,QAAMW,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAI;AACF,YAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACX,WAAD,CAAjC,GAAiDW,KAAtE;AACAV,MAAAA,cAAc,CAACW,YAAD,CAAd;AACAT,MAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4BhB,GAA5B,EAAiCQ,IAAI,CAACS,SAAL,CAAeH,YAAf,CAAjC;AACD,KAJD,CAIE,OAAOJ,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GARD;;AAUA,SAAO,CAACR,WAAD,EAAcU,QAAd,CAAP;AACD,CAtBD;;GAAMb,e;;AAwBN,eAAeA,eAAf","sourcesContent":["\r\nimport { useState } from 'react';\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n"]},"metadata":{},"sourceType":"module"}